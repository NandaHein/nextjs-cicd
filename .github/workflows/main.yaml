name: Deploy ReactvoterApp with github actions

on:
  push:
    branches: [ "main" ]

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  REPO_NAME: ${{ secrets.REPO_NAME }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

  IMAGE_NAME: ${{ vars.IMAGE_NAME }}
  REMOTE_HOST: ${{ vars.REMOTE_HOST }}
  REMOTE_USER: ${{ vars.REMOTE_USER }}
  CONTAINER_NAME: $ {{ vars.CONTAINER_NAME }}
  DOMAIN_NAME: ${{ vars.DOMAIN_NAME }}
   
jobs:
  build_nextjsapp:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.6

      - name: Login to Dockerhub
        run: | 
          echo $DOCKERHUB_TOKEN | docker login -u $DOCKERHUB_USERNAME --password-stdin

      - name: Build the Docker Image
        run: | 
          docker build -t $IMAGE_NAME .
      
      - name: Tag and Push the Image to Dockerhub
        run: |
          docker tag $IMAGE_NAME $REPO_NAME/$IMAGE_NAME
          docker push $REPO_NAME/$IMAGE_NAME

  deploy_nextjsapp:
    runs-on: ubuntu-latest
    needs: build_nextjsapp

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.6

      - name: Configure SSH Connection
        run: |
          mkdir -p ~/.ssh
          touch ~/.ssh/private.key
          echo $SSH_PRIVATE_KEY > ~/.ssh/private.key
          chmod 400 ~/.ssh/private.key
          eval 'ssh-agent -s'
          ssh-add ~/.ssh/private.key
          touch ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
          ssh-keyscan $REMOTE_HOST >> ~/.ssh/known_hosts

      - name: Install ansible packages
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible

      - name: Configure ansible hosts
        run: |
          echo "SERVER ansible_host=$REMOTE_HOST ansible_user=$REMOTE_USER host_key_checking=False ansible_ssh_private_key_file=~/.ssh/private.key" > inventory

      - name: Deploy nextjs app with ansible
        run: |
          ansible-playbook -i inventory \
          -e "dockerhub_username=$DOCKERHUB_USERNAME" \
          -e "dockerhub_token=$DOCKERHUB_TOKEN" \
          -e "image_name=$IMAGE_NAME" \
          -e "container_name=$CONTAINER_NAME" \
          -e "domain_name=$DOMAIN_NAME" \
          -e "repo_name=$REPO_NAME"
          CI-CD/nextjs-deploy.yaml

